{"version":3,"sources":["../webpack/bootstrap","workers/dbc-csv-downloader.worker.js","utils/loadnpy.js","../node_modules/int64-buffer/int64-buffer.js","../node_modules/node-libs-browser/node_modules/buffer/index.js","../node_modules/webpack/buildin/global.js","../node_modules/base64-js/index.js","../node_modules/ieee754/index.js","../node_modules/isarray/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","self","Int64LE","transformAndSend","rawData","totalSize","maxTime","reduce","memo","sourceData","entries","length","sort","a","b","relTime","Math","max","getLastTimeFromEntries","minTime","console","log","curIndexes","forEach","sourceId","id","findFirstEntryIndex","start","round","entryBuffer","totalEntries","nextSource","curEntry","entry","address","bus","push","makeEntry","postMessage","progress","logData","join","shouldClose","hexData","onmessage","e","base","parts","data","canStartTime","prevMsgEntries","maxByteStateChangeCount","close","NumpyLoader","asciiDecode","buf","String","fromCharCode","apply","Uint8Array","fromArrayBuffer","slice","Error","headerLength","readUint16LE","buffer","view","DataView","val","getUint8","headerStr","offsetBytes","info","JSON","parse","toLowerCase","replace","descr","Int8Array","Uint16Array","Int16Array","Uint32Array","Int32Array","Float32Array","Float64Array","shape","fortran_order","open","file","callback","reader","FileReader","onload","ndarray","result","readAsArrayBuffer","promise","url","Promise","resolve","reject","req","XMLHttpRequest","status","response","is404","statusText","onerror","responseType","send","storage","BUFFER","Buffer","UINT8ARRAY","ARRAYBUFFER","ArrayBuffer","ZERO","isArray","Array","_isArray","toString","BIT32","factory","bigendian","unsigned","posH","posL","pos0","pos1","pos2","pos3","fromPositive","fromPositiveBE","fromPositiveLE","fromNegative","fromNegativeBE","fromNegativeLE","proto","Int64","isName","_isInt64","offset","toNumber","radix","this","high","readInt32","low","str","sign","mod","floor","toJSON","toArray","toBuffer","toArrayBuffer","isInt64","raddix","init","that","newArray","isValidBuffer","fromString","pos","len","chr","parseInt","writeInt32","fromArray","raw","isBuffer","dest","arrbuf","byteLength","destbuf","destoff","srcbuf","srcoff","end","nodeName","base64","require","ieee754","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","RangeError","__proto__","arg","encodingOrOffset","allocUnsafe","from","TypeError","array","byteOffset","undefined","fromArrayLike","string","encoding","isEncoding","actual","write","fromObject","obj","checked","copy","isnan","type","assertSize","size","isView","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","bidirectionalIndexOf","dir","isNaN","arrayIndexOf","indexOf","lastIndexOf","arr","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","j","hexWrite","Number","remaining","strLen","parsed","substr","utf8Write","blitBuffer","asciiWrite","asciiToBytes","byteArray","charCodeAt","latin1Write","base64Write","ucs2Write","utf16leToBytes","units","hi","lo","fromByteArray","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","decodeCodePointsArray","codePoints","SlowBuffer","alloc","INSPECT_MAX_BYTES","global","typedArraySupport","foo","subarray","poolSize","_augment","species","configurable","fill","allocUnsafeSlow","_isBuffer","compare","x","y","concat","list","swap16","swap32","swap64","arguments","equals","inspect","match","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","code","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","base64clean","stringtrim","trim","src","dst","g","Function","window","b64","lens","getLens","validLen","placeHoldersLen","tmp","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","len2","encodeChunk","lookup","num","output","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","abs","LN2"],"mappings":"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","file":"ed040febd1ce733cecf6.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/cabana/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/* eslint-env worker */\n/* eslint-disable no-restricted-globals */\n// import Sentry from '../logging/Sentry';\n\nimport NumpyLoader from '../utils/loadnpy';\n\nconst MAX_CONNECTIONS = 8;\n\nconst window = self;\n\nconst { Int64LE } = require('int64-buffer');\n\nfunction transformAndSend(rawData) {\n  let totalSize = 0;\n  const maxTime = rawData.reduce((memo, sourceData) => {\n    totalSize += sourceData.entries.length;\n    sourceData.entries = sourceData.entries.sort((a, b) => {\n      if (a.relTime > b.relTime) {\n        return 1;\n      }\n      if (a.relTime < b.relTime) {\n        return -1;\n      }\n      return 0;\n    });\n    return Math.max(memo, getLastTimeFromEntries(sourceData.entries));\n  }, 0);\n\n  const minTime = Math.max(0, maxTime - 30);\n  console.log('Time span from', minTime, maxTime);\n  const curIndexes = {};\n  rawData.forEach((sourceData) => {\n    if (!sourceData.entries.length) {\n      return;\n    }\n    const sourceId = sourceData.id;\n    if (minTime === 0 || sourceData.entries[0].relTime > minTime) {\n      curIndexes[sourceId] = 0;\n      return;\n    }\n    curIndexes[sourceId] = findFirstEntryIndex(sourceData.entries, minTime);\n  });\n\n  let entryBuffer = [];\n  let totalEntries = 0;\n\n  while (!isAtEnd()) {\n    const nextSource = rawData.reduce((memo, sourceData) => {\n      const curEntry = sourceData.entries[curIndexes[sourceData.id]];\n      if (!curEntry) {\n        return memo;\n      }\n      if (memo === -1) {\n        return {\n          entry: curEntry,\n          address: sourceData.address,\n          bus: sourceData.bus,\n          id: sourceData.id\n        };\n      }\n      if (curEntry.relTime < memo.entry.relTime) {\n        return {\n          entry: curEntry,\n          address: sourceData.address,\n          bus: sourceData.bus,\n          id: sourceData.id\n        };\n      }\n      return memo;\n    }, -1);\n    if (nextSource === -1) {\n      break;\n    }\n    curIndexes[nextSource.id]++;\n    totalEntries++;\n\n    entryBuffer.push(makeEntry(nextSource));\n\n    if (entryBuffer.length > 5000) {\n      self.postMessage({\n        progress: 100 * (totalEntries / totalSize),\n        logData: entryBuffer.join('\\n'),\n        shouldClose: false\n      });\n      entryBuffer = [];\n    }\n  }\n  if (entryBuffer.length > 0) {\n    self.postMessage({\n      progress: 99,\n      logData: entryBuffer.join('\\n'),\n      shouldClose: false\n    });\n    entryBuffer = [];\n  }\n\n  console.log('Wrote', totalEntries, 'lines of CSV');\n  self.postMessage({\n    progress: 100,\n    shouldClose: true\n  });\n\n  function isAtEnd() {\n    return rawData.reduce(\n      (memo, sourceData) => memo && curIndexes[sourceData.id] >= sourceData.entries.length\n    );\n  }\n}\n\nfunction makeEntry(nextSource) {\n  return [\n    nextSource.entry.relTime,\n    nextSource.address,\n    nextSource.bus,\n    nextSource.entry.hexData\n  ].join(',');\n}\n\nfunction findFirstEntryIndex(entries, minTime, start, length) {\n  start = start || entries.length / 2;\n  start = ~~start; // round down\n  length = length || entries.length / 2;\n  length = Math.round(length); // round up\n\n  if (start === 0) {\n    return 0;\n  }\n  if (start >= entries.length - 1) {\n    return entries.length - 1;\n  }\n\n  if (entries[start].relTime < minTime) {\n    // this entry is too early for the 30s window\n    return findFirstEntryIndex(\n      entries,\n      minTime,\n      ~~(start + length / 2),\n      length / 2\n    );\n  }\n  if (entries[start].relTime >= minTime) {\n    // this entry is within the window! check if it's the first one in the window, else keep searching\n    if (entries[start - 1].relTime >= minTime) {\n      return findFirstEntryIndex(\n        entries,\n        minTime,\n        ~~(start - length / 2),\n        length / 2\n      );\n    }\n    return start;\n  }\n}\n\nfunction getLastTimeFromEntries(entries) {\n  if (!entries.length) {\n    return 0;\n  }\n  return entries[entries.length - 1].relTime;\n}\n\nself.onmessage = function (e) {\n  console.log('onmessage worker');\n  self.postMessage({\n    progress: 0,\n    logData: 'time,addr,bus,data',\n    shouldClose: false\n  });\n  const {\n    base,\n    parts,\n    data,\n    canStartTime,\n    prevMsgEntries,\n    maxByteStateChangeCount\n  } = e.data;\n\n  // const dbc = new DBC(dbcText);\n  // saveDBC(dbc, base, num, canStartTime);\n  if (data) {\n    // has raw data from live mode, process this instead\n    console.log('Using raw data from memory', canStartTime);\n    transformAndSend(data, canStartTime);\n  } else {\n    self.postMessage({\n      progress: 100,\n      shouldClose: true\n    });\n    self.close();\n  }\n};\n","// Client-side parser for .npy files\n// See the specification: http://docs.scipy.org/doc/numpy-dev/neps/npy-format.html\n\nconst NumpyLoader = (function NumpyLoader() {\n  function asciiDecode(buf) {\n    return String.fromCharCode.apply(null, new Uint8Array(buf));\n  }\n\n  function readUint16LE(buffer) {\n    const view = new DataView(buffer);\n    let val = view.getUint8(0);\n    val |= view.getUint8(1) << 8;\n    return val;\n  }\n\n  function fromArrayBuffer(buf) {\n    // Check the magic number\n    const magic = asciiDecode(buf.slice(0, 6));\n    if (magic !== '\\x93NUMPY') {\n      throw new Error('Bad magic number');\n    }\n\n    const version = new Uint8Array(buf.slice(6, 8));\n    const headerLength = readUint16LE(buf.slice(8, 10));\n    const headerStr = asciiDecode(buf.slice(10, 10 + headerLength));\n    const offsetBytes = 10 + headerLength;\n    // rest = buf.slice(10+headerLength);  XXX -- This makes a copy!!! https://www.khronos.org/registry/typedarray/specs/latest/#5\n\n    // Hacky conversion of dict literal string to JS Object\n    const info = JSON.parse(\n      headerStr\n        .toLowerCase()\n        .replace('(', '[')\n        .replace('),', ']')\n        .replace(/'/g, '\"')\n        .replace(',]', ']')\n    );\n\n    // Intepret the bytes according to the specified dtype\n    let data;\n    if (info.descr === '|u1') {\n      data = new Uint8Array(buf, offsetBytes);\n    } else if (info.descr === '|i1') {\n      data = new Int8Array(buf, offsetBytes);\n    } else if (info.descr === '<u2') {\n      data = new Uint16Array(buf, offsetBytes);\n    } else if (info.descr === '<i2') {\n      data = new Int16Array(buf, offsetBytes);\n    } else if (info.descr === '<u4') {\n      data = new Uint32Array(buf, offsetBytes);\n    } else if (info.descr === '<i4') {\n      data = new Int32Array(buf, offsetBytes);\n    } else if (info.descr === '<f4') {\n      data = new Float32Array(buf, offsetBytes);\n    } else if (info.descr === '<f8') {\n      data = new Float64Array(buf, offsetBytes);\n    } else if (info.descr === '<u8') {\n      // 8 byte uint64s\n      data = new Uint8Array(buf, offsetBytes);\n    } else if (info.descr === '<i8') {\n      // 8 byte int64s\n      data = new Uint8Array(buf, offsetBytes);\n    } else if (info.descr === '|s5') {\n      // 5 byte string\n      data = new Uint8Array(buf, offsetBytes);\n    } else if (info.descr === '|s8') {\n      // 8 byte strings\n      data = new Uint8Array(buf, offsetBytes);\n    } else if (info.descr === '|s15') {\n      // 15 byte strings?\n      data = new Uint8Array(buf, offsetBytes);\n    } else {\n      throw new Error(`unknown numeric dtype ${info.descr}`);\n    }\n\n    return {\n      shape: info.shape,\n      fortran_order: info.fortran_order,\n      data\n    };\n  }\n\n  function open(file, callback) {\n    const reader = new FileReader();\n    reader.onload = function () {\n      // the file contents have been read as an array buffer\n      const buf = reader.result;\n      const ndarray = fromArrayBuffer(buf);\n      callback(ndarray);\n    };\n    reader.readAsArrayBuffer(file);\n  }\n\n  function promise(url) {\n    return new Promise((resolve, reject) => {\n      // Do the usual XHR stuff\n      const req = new XMLHttpRequest();\n      req.onload = function () {\n        // This is called even on 404 etc\n        // so check the status\n        if (req.status == 200) {\n          const buf = req.response; // not responseText\n          const ndarray = fromArrayBuffer(buf);\n          resolve(ndarray);\n        } else if (req.status == 404) {\n          console.log('yup');\n          reject({ is404: true });\n        } else {\n          // Otherwise reject with the status text\n          // which will hopefully be a meaningful error\n          reject(Error(req.statusText));\n        }\n      };\n\n      // Handle network errors\n      req.onerror = function () {\n        reject(Error('Network Error'));\n      };\n\n      // Make the request\n      req.open('GET', url, true);\n      req.responseType = 'arraybuffer';\n      req.send(null);\n    });\n  }\n\n  return {\n    open,\n    promise,\n    fromArrayBuffer\n  };\n}());\n\nmodule.exports = NumpyLoader;\n","// int64-buffer.js\n\n/*jshint -W018 */ // Confusing use of '!'.\n/*jshint -W030 */ // Expected an assignment or function call and instead saw an expression.\n/*jshint -W093 */ // Did you mean to return a conditional instead of an assignment?\n\nvar Uint64BE, Int64BE, Uint64LE, Int64LE;\n\n!function(exports) {\n  // constants\n\n  var UNDEFINED = \"undefined\";\n  var BUFFER = (UNDEFINED !== typeof Buffer) && Buffer;\n  var UINT8ARRAY = (UNDEFINED !== typeof Uint8Array) && Uint8Array;\n  var ARRAYBUFFER = (UNDEFINED !== typeof ArrayBuffer) && ArrayBuffer;\n  var ZERO = [0, 0, 0, 0, 0, 0, 0, 0];\n  var isArray = Array.isArray || _isArray;\n  var BIT32 = 4294967296;\n  var BIT24 = 16777216;\n\n  // storage class\n\n  var storage; // Array;\n\n  // generate classes\n\n  Uint64BE = factory(\"Uint64BE\", true, true);\n  Int64BE = factory(\"Int64BE\", true, false);\n  Uint64LE = factory(\"Uint64LE\", false, true);\n  Int64LE = factory(\"Int64LE\", false, false);\n\n  // class factory\n\n  function factory(name, bigendian, unsigned) {\n    var posH = bigendian ? 0 : 4;\n    var posL = bigendian ? 4 : 0;\n    var pos0 = bigendian ? 0 : 3;\n    var pos1 = bigendian ? 1 : 2;\n    var pos2 = bigendian ? 2 : 1;\n    var pos3 = bigendian ? 3 : 0;\n    var fromPositive = bigendian ? fromPositiveBE : fromPositiveLE;\n    var fromNegative = bigendian ? fromNegativeBE : fromNegativeLE;\n    var proto = Int64.prototype;\n    var isName = \"is\" + name;\n    var _isInt64 = \"_\" + isName;\n\n    // properties\n    proto.buffer = void 0;\n    proto.offset = 0;\n    proto[_isInt64] = true;\n\n    // methods\n    proto.toNumber = toNumber;\n    proto.toString = toString;\n    proto.toJSON = toNumber;\n    proto.toArray = toArray;\n\n    // add .toBuffer() method only when Buffer available\n    if (BUFFER) proto.toBuffer = toBuffer;\n\n    // add .toArrayBuffer() method only when Uint8Array available\n    if (UINT8ARRAY) proto.toArrayBuffer = toArrayBuffer;\n\n    // isUint64BE, isInt64BE\n    Int64[isName] = isInt64;\n\n    // CommonJS\n    exports[name] = Int64;\n\n    return Int64;\n\n    // constructor\n    function Int64(buffer, offset, value, raddix) {\n      if (!(this instanceof Int64)) return new Int64(buffer, offset, value, raddix);\n      return init(this, buffer, offset, value, raddix);\n    }\n\n    // isUint64BE, isInt64BE\n    function isInt64(b) {\n      return !!(b && b[_isInt64]);\n    }\n\n    // initializer\n    function init(that, buffer, offset, value, raddix) {\n      if (UINT8ARRAY && ARRAYBUFFER) {\n        if (buffer instanceof ARRAYBUFFER) buffer = new UINT8ARRAY(buffer);\n        if (value instanceof ARRAYBUFFER) value = new UINT8ARRAY(value);\n      }\n\n      // Int64BE() style\n      if (!buffer && !offset && !value && !storage) {\n        // shortcut to initialize with zero\n        that.buffer = newArray(ZERO, 0);\n        return;\n      }\n\n      // Int64BE(value, raddix) style\n      if (!isValidBuffer(buffer, offset)) {\n        var _storage = storage || Array;\n        raddix = offset;\n        value = buffer;\n        offset = 0;\n        buffer = new _storage(8);\n      }\n\n      that.buffer = buffer;\n      that.offset = offset |= 0;\n\n      // Int64BE(buffer, offset) style\n      if (UNDEFINED === typeof value) return;\n\n      // Int64BE(buffer, offset, value, raddix) style\n      if (\"string\" === typeof value) {\n        fromString(buffer, offset, value, raddix || 10);\n      } else if (isValidBuffer(value, raddix)) {\n        fromArray(buffer, offset, value, raddix);\n      } else if (\"number\" === typeof raddix) {\n        writeInt32(buffer, offset + posH, value); // high\n        writeInt32(buffer, offset + posL, raddix); // low\n      } else if (value > 0) {\n        fromPositive(buffer, offset, value); // positive\n      } else if (value < 0) {\n        fromNegative(buffer, offset, value); // negative\n      } else {\n        fromArray(buffer, offset, ZERO, 0); // zero, NaN and others\n      }\n    }\n\n    function fromString(buffer, offset, str, raddix) {\n      var pos = 0;\n      var len = str.length;\n      var high = 0;\n      var low = 0;\n      if (str[0] === \"-\") pos++;\n      var sign = pos;\n      while (pos < len) {\n        var chr = parseInt(str[pos++], raddix);\n        if (!(chr >= 0)) break; // NaN\n        low = low * raddix + chr;\n        high = high * raddix + Math.floor(low / BIT32);\n        low %= BIT32;\n      }\n      if (sign) {\n        high = ~high;\n        if (low) {\n          low = BIT32 - low;\n        } else {\n          high++;\n        }\n      }\n      writeInt32(buffer, offset + posH, high);\n      writeInt32(buffer, offset + posL, low);\n    }\n\n    function toNumber() {\n      var buffer = this.buffer;\n      var offset = this.offset;\n      var high = readInt32(buffer, offset + posH);\n      var low = readInt32(buffer, offset + posL);\n      if (!unsigned) high |= 0; // a trick to get signed\n      return high ? (high * BIT32 + low) : low;\n    }\n\n    function toString(radix) {\n      var buffer = this.buffer;\n      var offset = this.offset;\n      var high = readInt32(buffer, offset + posH);\n      var low = readInt32(buffer, offset + posL);\n      var str = \"\";\n      var sign = !unsigned && (high & 0x80000000);\n      if (sign) {\n        high = ~high;\n        low = BIT32 - low;\n      }\n      radix = radix || 10;\n      while (1) {\n        var mod = (high % radix) * BIT32 + low;\n        high = Math.floor(high / radix);\n        low = Math.floor(mod / radix);\n        str = (mod % radix).toString(radix) + str;\n        if (!high && !low) break;\n      }\n      if (sign) {\n        str = \"-\" + str;\n      }\n      return str;\n    }\n\n    function writeInt32(buffer, offset, value) {\n      buffer[offset + pos3] = value & 255;\n      value = value >> 8;\n      buffer[offset + pos2] = value & 255;\n      value = value >> 8;\n      buffer[offset + pos1] = value & 255;\n      value = value >> 8;\n      buffer[offset + pos0] = value & 255;\n    }\n\n    function readInt32(buffer, offset) {\n      return (buffer[offset + pos0] * BIT24) +\n        (buffer[offset + pos1] << 16) +\n        (buffer[offset + pos2] << 8) +\n        buffer[offset + pos3];\n    }\n  }\n\n  function toArray(raw) {\n    var buffer = this.buffer;\n    var offset = this.offset;\n    storage = null; // Array\n    if (raw !== false && offset === 0 && buffer.length === 8 && isArray(buffer)) return buffer;\n    return newArray(buffer, offset);\n  }\n\n  function toBuffer(raw) {\n    var buffer = this.buffer;\n    var offset = this.offset;\n    storage = BUFFER;\n    if (raw !== false && offset === 0 && buffer.length === 8 && Buffer.isBuffer(buffer)) return buffer;\n    var dest = new BUFFER(8);\n    fromArray(dest, 0, buffer, offset);\n    return dest;\n  }\n\n  function toArrayBuffer(raw) {\n    var buffer = this.buffer;\n    var offset = this.offset;\n    var arrbuf = buffer.buffer;\n    storage = UINT8ARRAY;\n    if (raw !== false && offset === 0 && (arrbuf instanceof ARRAYBUFFER) && arrbuf.byteLength === 8) return arrbuf;\n    var dest = new UINT8ARRAY(8);\n    fromArray(dest, 0, buffer, offset);\n    return dest.buffer;\n  }\n\n  function isValidBuffer(buffer, offset) {\n    var len = buffer && buffer.length;\n    offset |= 0;\n    return len && (offset + 8 <= len) && (\"string\" !== typeof buffer[offset]);\n  }\n\n  function fromArray(destbuf, destoff, srcbuf, srcoff) {\n    destoff |= 0;\n    srcoff |= 0;\n    for (var i = 0; i < 8; i++) {\n      destbuf[destoff++] = srcbuf[srcoff++] & 255;\n    }\n  }\n\n  function newArray(buffer, offset) {\n    return Array.prototype.slice.call(buffer, offset, offset + 8);\n  }\n\n  function fromPositiveBE(buffer, offset, value) {\n    var pos = offset + 8;\n    while (pos > offset) {\n      buffer[--pos] = value & 255;\n      value /= 256;\n    }\n  }\n\n  function fromNegativeBE(buffer, offset, value) {\n    var pos = offset + 8;\n    value++;\n    while (pos > offset) {\n      buffer[--pos] = ((-value) & 255) ^ 255;\n      value /= 256;\n    }\n  }\n\n  function fromPositiveLE(buffer, offset, value) {\n    var end = offset + 8;\n    while (offset < end) {\n      buffer[offset++] = value & 255;\n      value /= 256;\n    }\n  }\n\n  function fromNegativeLE(buffer, offset, value) {\n    var end = offset + 8;\n    value++;\n    while (offset < end) {\n      buffer[offset++] = ((-value) & 255) ^ 255;\n      value /= 256;\n    }\n  }\n\n  // https://github.com/retrofox/is-array\n  function _isArray(val) {\n    return !!val && \"[object Array]\" == Object.prototype.toString.call(val);\n  }\n\n}(typeof exports === 'object' && typeof exports.nodeName !== 'string' ? exports : (this || {}));\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n"],"sourceRoot":""}